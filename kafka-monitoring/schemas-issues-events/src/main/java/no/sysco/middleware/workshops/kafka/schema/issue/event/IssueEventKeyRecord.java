/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.sysco.middleware.workshops.kafka.schema.issue.event;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class IssueEventKeyRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5507240770339310878L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IssueEventKeyRecord\",\"namespace\":\"no.sysco.middleware.workshops.kafka.schema.issue.event\",\"fields\":[{\"name\":\"correlation_id\",\"type\":\"string\"},{\"name\":\"executed_by\",\"type\":\"string\"},{\"name\":\"executed_at\",\"type\":\"string\"},{\"name\":\"event\",\"type\":{\"type\":\"enum\",\"name\":\"EventEnum\",\"symbols\":[\"ADDED\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence correlation_id;
  @Deprecated public java.lang.CharSequence executed_by;
  @Deprecated public java.lang.CharSequence executed_at;
  @Deprecated public no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum event;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IssueEventKeyRecord() {}

  /**
   * All-args constructor.
   * @param correlation_id The new value for correlation_id
   * @param executed_by The new value for executed_by
   * @param executed_at The new value for executed_at
   * @param event The new value for event
   */
  public IssueEventKeyRecord(java.lang.CharSequence correlation_id, java.lang.CharSequence executed_by, java.lang.CharSequence executed_at, no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum event) {
    this.correlation_id = correlation_id;
    this.executed_by = executed_by;
    this.executed_at = executed_at;
    this.event = event;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return correlation_id;
    case 1: return executed_by;
    case 2: return executed_at;
    case 3: return event;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: correlation_id = (java.lang.CharSequence)value$; break;
    case 1: executed_by = (java.lang.CharSequence)value$; break;
    case 2: executed_at = (java.lang.CharSequence)value$; break;
    case 3: event = (no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'correlation_id' field.
   * @return The value of the 'correlation_id' field.
   */
  public java.lang.CharSequence getCorrelationId() {
    return correlation_id;
  }

  /**
   * Sets the value of the 'correlation_id' field.
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.CharSequence value) {
    this.correlation_id = value;
  }

  /**
   * Gets the value of the 'executed_by' field.
   * @return The value of the 'executed_by' field.
   */
  public java.lang.CharSequence getExecutedBy() {
    return executed_by;
  }

  /**
   * Sets the value of the 'executed_by' field.
   * @param value the value to set.
   */
  public void setExecutedBy(java.lang.CharSequence value) {
    this.executed_by = value;
  }

  /**
   * Gets the value of the 'executed_at' field.
   * @return The value of the 'executed_at' field.
   */
  public java.lang.CharSequence getExecutedAt() {
    return executed_at;
  }

  /**
   * Sets the value of the 'executed_at' field.
   * @param value the value to set.
   */
  public void setExecutedAt(java.lang.CharSequence value) {
    this.executed_at = value;
  }

  /**
   * Gets the value of the 'event' field.
   * @return The value of the 'event' field.
   */
  public no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum getEvent() {
    return event;
  }

  /**
   * Sets the value of the 'event' field.
   * @param value the value to set.
   */
  public void setEvent(no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum value) {
    this.event = value;
  }

  /**
   * Creates a new IssueEventKeyRecord RecordBuilder.
   * @return A new IssueEventKeyRecord RecordBuilder
   */
  public static no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder newBuilder() {
    return new no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder();
  }

  /**
   * Creates a new IssueEventKeyRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IssueEventKeyRecord RecordBuilder
   */
  public static no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder newBuilder(no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder other) {
    return new no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder(other);
  }

  /**
   * Creates a new IssueEventKeyRecord RecordBuilder by copying an existing IssueEventKeyRecord instance.
   * @param other The existing instance to copy.
   * @return A new IssueEventKeyRecord RecordBuilder
   */
  public static no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder newBuilder(no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord other) {
    return new no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder(other);
  }

  /**
   * RecordBuilder for IssueEventKeyRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IssueEventKeyRecord>
    implements org.apache.avro.data.RecordBuilder<IssueEventKeyRecord> {

    private java.lang.CharSequence correlation_id;
    private java.lang.CharSequence executed_by;
    private java.lang.CharSequence executed_at;
    private no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum event;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[0].schema(), other.correlation_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.executed_by)) {
        this.executed_by = data().deepCopy(fields()[1].schema(), other.executed_by);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.executed_at)) {
        this.executed_at = data().deepCopy(fields()[2].schema(), other.executed_at);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event)) {
        this.event = data().deepCopy(fields()[3].schema(), other.event);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing IssueEventKeyRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[0].schema(), other.correlation_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.executed_by)) {
        this.executed_by = data().deepCopy(fields()[1].schema(), other.executed_by);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.executed_at)) {
        this.executed_at = data().deepCopy(fields()[2].schema(), other.executed_at);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event)) {
        this.event = data().deepCopy(fields()[3].schema(), other.event);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'correlation_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorrelationId() {
      return correlation_id;
    }

    /**
      * Sets the value of the 'correlation_id' field.
      * @param value The value of 'correlation_id'.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder setCorrelationId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.correlation_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'correlation_id' field has been set.
      * @return True if the 'correlation_id' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'correlation_id' field.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder clearCorrelationId() {
      correlation_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'executed_by' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecutedBy() {
      return executed_by;
    }

    /**
      * Sets the value of the 'executed_by' field.
      * @param value The value of 'executed_by'.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder setExecutedBy(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.executed_by = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'executed_by' field has been set.
      * @return True if the 'executed_by' field has been set, false otherwise.
      */
    public boolean hasExecutedBy() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'executed_by' field.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder clearExecutedBy() {
      executed_by = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'executed_at' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecutedAt() {
      return executed_at;
    }

    /**
      * Sets the value of the 'executed_at' field.
      * @param value The value of 'executed_at'.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder setExecutedAt(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.executed_at = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'executed_at' field has been set.
      * @return True if the 'executed_at' field has been set, false otherwise.
      */
    public boolean hasExecutedAt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'executed_at' field.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder clearExecutedAt() {
      executed_at = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'event' field.
      * @return The value.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum getEvent() {
      return event;
    }

    /**
      * Sets the value of the 'event' field.
      * @param value The value of 'event'.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder setEvent(no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum value) {
      validate(fields()[3], value);
      this.event = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'event' field has been set.
      * @return True if the 'event' field has been set, false otherwise.
      */
    public boolean hasEvent() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'event' field.
      * @return This builder.
      */
    public no.sysco.middleware.workshops.kafka.schema.issue.event.IssueEventKeyRecord.Builder clearEvent() {
      event = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public IssueEventKeyRecord build() {
      try {
        IssueEventKeyRecord record = new IssueEventKeyRecord();
        record.correlation_id = fieldSetFlags()[0] ? this.correlation_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.executed_by = fieldSetFlags()[1] ? this.executed_by : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.executed_at = fieldSetFlags()[2] ? this.executed_at : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.event = fieldSetFlags()[3] ? this.event : (no.sysco.middleware.workshops.kafka.schema.issue.event.EventEnum) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
